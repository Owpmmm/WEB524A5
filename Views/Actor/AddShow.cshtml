@model JK2247A5.Models.ShowAddFormViewModel

@{
    ViewBag.Title = "AddShow";
}

<script src="//cdn.ckeditor.com/4.6.2/standard/ckeditor.js"></script>

<h2>Add Show for @Model.ActorName</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ActorId)

        <!-- Name Field -->
        <div class="row mb-3">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-md-2 text-end fw-bold" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Release Date Field -->
        <div class="row mb-3">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "col-form-label col-md-2 text-end fw-bold" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Image URL Field -->
        <div class="row mb-3">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "col-form-label col-md-2 text-end fw-bold" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Genre Dropdown -->
        <div class="row mb-3">
            @Html.LabelFor(model => model.GenreList, htmlAttributes: new { @class = "col-form-label col-md-2 text-end fw-bold" })
            <div class="col-md-10">
                @Html.DropDownList("Genre", Model.GenreList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GenreList, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Actor List (Checkboxes) -->
        <div class="row mb-3">
            @Html.LabelFor(m => m.ActorList, new { @class = "col-form-label col-md-2 text-end fw-bold" })
            <div class="col-md-10 bg-light">
                @{
                    int i = 0;
                    foreach (var item in Model.ActorList)
                    {
                        i++;
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="Actors@(i)" name="ActorIds" checked="@item.Selected" value="@item.Value" />
                            <label class="form-check-label" for="Actors@(i)">
                                @item.Text
                            </label>
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Submit Button -->
        <div class="row mb-3">
            <div class="col-sm-10 offset-sm-2">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}